{"version":3,"sources":["components/nav/Nav.js","components/home/Home.js","components/about/About.js","components/posts/PostList.js","components/posts/Post.js","App.js","serviceWorker.js","index.js"],"names":["Item","this","props","to","children","exact","path","match","className","Component","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","state","posts","axios","get","then","response","setState","data","history","src","height","width","alt","map","item","key","onClick","push","title","author","body","withRouter","About","PostList","Post","post","postId","params","App","tab","onChange","onNavChange","activeTab","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8657afe4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport './nav.css';\n\nclass Item extends Component {\n  render() { \n    const {to, children, exact} = this.props;\n\n    return ( \n      <Route\n        path={to}\n        exact={exact}\n        children={({ match }) => ( //就是一個 functional component\n          <li className={match ? \"nav-link active\" : \"nav-link\"}>\n            <Link to={to} className=\"nav-link\">{children}</Link>\n          </li>\n        )}\n      />\n    );\n  }\n}\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <i className=\"material-icons\">\n                visibility\n              </i>\n          </Link>\n          {/* <a className=\"navbar-brand\" href=\"/\">\n            <i className=\"material-icons\">\n              visibility\n            </i>\n          </a> */}\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <Item to=\"/\" exact={true}>\n                Home\n              </Item>\n              <Item to=\"/post\">\n                Post\n              </Item>\n              <Item to=\"/about\">\n                About\n              </Item>\n\n            </ul>\n          </div>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default Nav;","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom'; //Higher order component\nimport axios from 'axios';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://qootest.com/posts?_limit=8&_sort=id&_order=desc')\n    .then(response => {\n        this.setState({\n          posts: response.data\n        })\n      })\n  }\n\n  render() {\n    const {posts} = this.state;\n    const {history} = this.props;\n\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-10 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1562332651-12481360937c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\" height=\"550px\" width=\"100%\" alt=\"\" />\n          <h3>New Features: </h3>\n        </div>\n        \n        <div className=\"container col-md-10 mt-2\">\n          <div className=\"row post-list\">     \n          \n              {posts.map((item)=> (\n                <div className=\"post-item col-md-3  mt-3 mb-4\" key={item.id} onClick={() => {\n                  history.push('/post/' + item.id); //一個換頁的 function\n                }}>\n                  <h4>{item.title}</h4>\n                  <div className=\"post-item__author\">\n                  Author: {item.author} \n                  </div>\n                  <div className=\"post-item__body\">\n                  {item.body} \n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Home);","import React, {Component} from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1524793186508-ac4eab29c957?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\">\n          <h3>About something</h3>\n          With designs as colorful as the muses that influence him, Peter Jensen confronts the fashion world with a gentle dose of eccentricity and humor.\n          “I’ve never fit into the fashion scene as many other people do. I’m terrible at networking”\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About;","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom'; //Higher order component\nimport axios from 'axios'\nimport './posts.css';\n\nclass PostList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n    }\n  }\n  \n  componentDidMount() {\n    axios.get('https://qootest.com/posts')\n    .then(response => {\n        this.setState({\n          posts: response.data\n        })\n      })\n  }\n\n  render() {\n    const {posts} = this.state;\n    const {history} = this.props;\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1531722569936-825d3dd91b15?ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        \n        <div className=\"container mt-2\">\n          <div className=\"row post-list\">     \n              {posts.map((item)=> (\n                <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\" key={item.id} onClick={() => {\n                  history.push('/post/' + item.id); //一個換頁的 function\n                }}>\n\n                  <h4>{item.title}</h4>\n                  <div className=\"post-item__author\">\n                    Author: {item.author} \n                  </div>\n                  <div className=\"post-item__body\">\n                    {item.body} \n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n\n\n\n    </div> \n    )\n  }\n}\n\n// export default PostList;\nexport default withRouter(PostList);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './posts.css';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {}\n    }\n  }\n  \n  componentDidMount() {\n    const postId = this.props.match.params.postId; //去抓 ID\n\n    axios.get('https://qootest.com/posts/' + postId)\n    .then(response => {\n        this.setState({\n          post: response.data\n        })\n      })\n  }\n\n  render() {\n    const {post} = this.state;\n    return (\n      <div>\n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1553458287-b25ff2a8a778?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1651&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n\n        <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\">\n          <h2>{!post.title ? 'loading...' : post.title}</h2>\n            <p className=\"single-post__content\">\n              {post.body}\n            </p>\n            <Link to=\"/post\" className=\"btn btn-secondary\">Back</Link>\n        </div>\n       \n      </div>\n    )\n  }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport './app.css';\nimport Nav from './components/nav/Nav';\nimport Home from './components/home/Home';\nimport About from './components/about/About';\nimport PostList from './components/posts/PostList';\nimport Post from './components/posts/Post';\nimport { HashRouter as Router, Route} from 'react-router-dom';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      //tab: removeHashSymbol(window.location.hash) || 'home'\n      tab: 'home', //預設\n    }\n  }\n\n  render() {\n    const {tab} = this.state;\n    return (\n      <Router>\n        <div>\n          <Nav onChange={this.onNavChange} activeTab={tab}/>\n\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/post\" component={PostList} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/post/:postId\" component={Post} />\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}